<?xml version='1.0' encoding='utf-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text">YOUR SITE NAME</title>
  <subtitle type="html">blah blah rant rant</subtitle>
  <updated>2015-04-13T18:07:40.861Z</updated>
  <id>http://yoursitehere.com/</id>
  <link rel="alternate" type="text/html" hreflang="en" href="http://yoursitehere.com/"/>
  <link rel="self" type="application/atom+xml" href="http://yoursitehere.com/atom.xml"/>
  <rights>Copyright (c) 2015 - Jim Lehmer - All Rights Reserved</rights>
  <generator uri="http://github.dom/dullroar/jim/" version="0.1.0">The "jim" platform</generator>
  <entry>
    <title>Getting started</title>
    <link rel="alternate" type="text/html" href="http://yoursitehere.com/getting-started.html"/>
    <id>http://yoursitehere.com/getting-started.html</id>
    <published>2015-04-13T00:00:00.000Z</published>
    <author>
      <name>Jim Lehmer</name>
      <uri>http://yoursitehere.com/</uri>
    </author>
    <content type="html"><p>To get started using the &quot;jim&quot; stack to create a static web site, you will need to:</p>
<ol>
<li>Install <a href="https://iojs.org/en/index.html">io.js</a>. Note that this code will not run
under node.js due to extensive use of <a href="https://iojs.org/en/es6.html">ECMAScript 6</a>.</li>
<li>Clone this repo.</li>
<li>Run <code>npm install</code> or <code>npm update</code> in the root of the project.</li>
<li>Make changes to <code>modules\config.js</code> as appropriate.</li>
<li>Change or add <a href="http://jade-lang.com/reference/">Jade templates</a> in the <code>templates</code> directory.</li>
<li>Add your own fixed assets. Add images to the <code>img</code> directory, scripts in <code>js</code>, stylesheets in <code>css</code>,
and &quot;root assets&quot; (files to be directly copied to the root of the <code>output</code> folder, such as <code>favicon.ico</code>)
in <code>rootassets</code>.</li>
<li><p>Write some content in the <code>posts</code> and/or <code>pages</code> directories (feel free to delete this post).
You can use <a href="https://help.github.com/articles/github-flavored-markdown">GitHub-Flavored Markdown</a>
or HTML or both for formatting content. The main differences between posts and pages are:</p>
<ol>
<li>Posts will show up in the Atom feed, pages will not.</li>
<li>Pages are processed after posts and hence have access to the metadata for all posts. For example,
both <code>sitemap.xml</code> and <code>atom.xml</code> are implemented as pages for this reason.</li>
</ol>
</li>
<li><p>Run <code>iojs process</code> in the root of the project. The results will be in the <code>output</code> directory.</p>
</li>
</ol>
<h2 id="metadata">Metadata</h2>
<p>See the second answer (and its comments) to <a href="http://stackoverflow.com/questions/4823468/store-comments-in-markdown-syntax">this StackOverflow question</a>
for how metadata is added to Markdown using nothing but Markdown-legal syntax
(and hence no need for a preprocessor). Basically, you set metadata like this:</p>
<pre><code>[author]: # (Jim Lehmer)
[title]: # (Getting started)
[created]: # (2015-04-13)
[tags]: # (jade iojs markdown)
</code></pre><h2 id="convention-over-configuration">Convention Over Configuration</h2>
<ol>
<li>Everything other than images, scripts and CSS will end up in the root of the <code>output</code> directory (yes,
that could get unwieldy at thousands of posts - I am not worried about it for now).</li>
<li>The Jade template to use is chosen by looking at the post or page file name (without extension).
If a matching Jade template name is found that is used, otherwise the <code>post.jade</code> template is used.
Note that this means you can create a &quot;fake&quot; page or post and use that solely to drive a template
getting rendered (e.g., the <code>atom.md</code> page is a placeholder file that does nothing more than
cause the <code>atom.jade</code> template to be used to render <code>atom.xml</code>).</li>
<li>Posts are meant to be like blog posts or articles, while pages are meant to be more &quot;static&quot; and
fixed. For example, it is better to make anything that will be linked to from the nav bar a page
rather than a post, but there is nothing that requires it.</li>
</ol>
</content>
  </entry>
</feed>